{"version":3,"sources":["components/tools/AlcCompute.jsx","components/ComAbout.jsx","services/DataAbout.js","components/ComHeader.jsx","components/ComFooter.jsx","layouts/LayoutNoSide.jsx","containers/Home.jsx","router/index.js","main.js","serviceWorker.js","index.js"],"names":["AlcCompute","state","AlcPercentHas","AlcPercentNeed","AlcMLNeed","onValuesChange","_","values","setState","result","WaterMLAdd","toFixed","AlcMLAdd","AlcDensity","style","color","size","name","initialValues","this","Item","label","min","max","dependencies","rules","getFieldValue","validator","rule","value","Promise","resolve","reject","data","React","Component","ComAbout","SubMenu","ComHeader","current","handleClick","e","key","theme","onClick","selectedKeys","mode","RobotOutlined","to","title","className","AppstoreOutlined","props","console","log","window","location","top","self","ComFooter","Header","Content","Footer","LayoutNoSide","breadcrumb","children","textAlign","routes","path","component","pageMethod","renderRoutes","route","exact","render","About","breadcrumbName","Main","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a9db8aa.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, InputNumber } from \"antd\";\n\nclass AlcCompute extends React.Component {\n  state = {\n    AlcPercentHas: 96,\n    AlcPercentNeed: 75,\n    AlcMLNeed: 500,\n  };\n  get AlcDensity() {\n    return (\n      (this.state.AlcPercentHas * 0.8 + (100 - this.state.AlcPercentHas * 1)) /\n      100\n    );\n  }\n  get AlcCompute() {\n    let data = {\n      AlcMLAdd: 0,\n      WaterMLAdd: 0,\n    };\n    data.AlcMLAdd =\n      (this.state.AlcPercentNeed * this.state.AlcMLNeed) /\n      this.state.AlcPercentHas;\n    data.WaterMLAdd = this.state.AlcMLNeed - data.AlcMLAdd;\n    return data;\n  }\n  onValuesChange = (_, values) => {\n    this.setState({\n      AlcPercentHas: values.AlcPercentHas,\n      AlcPercentNeed: values.AlcPercentNeed,\n      AlcMLNeed: values.AlcMLNeed,\n    });\n  };\n  result = () => {\n    if (this.state.AlcPercentHas > this.state.AlcPercentNeed) {\n      return (\n        <pre>\n          {`添加水(ml): ${this.AlcCompute.WaterMLAdd.toFixed(2)}\n添加酒精(ml): ${this.AlcCompute.AlcMLAdd.toFixed(2)}\n\n或\n\n添加水(g): ${this.AlcCompute.WaterMLAdd.toFixed(2)}\n添加酒精(g): ${(this.AlcCompute.AlcMLAdd * this.AlcDensity).toFixed(2)}`}\n        </pre>\n      );\n    } else {\n      return (\n        <pre style={{ color: \"#ff4d4f\" }}>\n          {`添加的酒精濃度要大於想得到的酒精濃度！`}\n        </pre>\n      );\n    }\n  };\n  render() {\n    return (\n      <>\n        <h1>酒精換算小工具</h1>\n        <Form\n          size=\"large\"\n          name=\"basic\"\n          /* eslint-disable */\n          initialValues={{\n            [\"AlcPercentHas\"]: this.state.AlcPercentHas,\n            [\"AlcPercentNeed\"]: this.state.AlcPercentNeed,\n            [\"AlcMLNeed\"]: this.state.AlcMLNeed,\n          }}\n          /* eslint-enable */\n          onValuesChange={this.onValuesChange}\n        >\n          <Form.Item name=\"AlcPercentHas\" label=\"添加酒精濃度(%)\">\n            <InputNumber min={1} max={100} />\n          </Form.Item>\n          <Form.Item\n            name=\"AlcPercentNeed\"\n            label=\"欲得酒精濃度(%)\"\n            dependencies={[\"AlcPercentHas\"]}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"AlcPercentHas\") > value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"添加的酒精濃度要大於想得到的酒精濃度！\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <InputNumber min={1} max={100} />\n          </Form.Item>\n          <Form.Item name=\"AlcMLNeed\" label=\"欲得酒精容量(ml)\">\n            <InputNumber min={1} />\n          </Form.Item>\n          <hr />\n          <h1>計算結果</h1>\n          {this.result()}\n        </Form>\n      </>\n    );\n  }\n}\nexport default AlcCompute;\n","import React from \"react\";\nimport { Data } from \"@services/DataAbout\";\n\nconst ComAbout = () => {\n  return <pre>{Data}</pre>;\n};\nexport default ComAbout;\n","export const Data = `- 留空事務所的工程師\n\n-- 其他夥伴休息中，目前由我獨自使用\n-- 會陸續寫一點小工具供大家免費使用\n\n-- 需要一點靈感。有需要的小工具可以來信(resavestation@gmail.com)，有可能會實現在這裡\n--- 我不會畫圖所以畫面不好看，您可以提供想要的樣式或畫面給我\n--- 製作後，會在此網站放置使用您素材的作品\n\n-- 若以後變為商用：\n1. 商用版本會移除您的素材\n2. 提供給您一份可執行檔，讓您依然有自己素材版本可使用\n3. 僅僅是可執行檔非sourcecode、同樣地您也不用給我素材原檔\n`;\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { RobotOutlined, AppstoreOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { SubMenu } = Menu;\n\nclass ComHeader extends React.Component {\n  state = {\n    current: \"\",\n  };\n  static getDerivedStateFromProps(props, state) {\n    console.log(window.location);\n    if (window.top.location !== window.self.location)\n      window.top.location = window.self.location;\n    return null;\n  }\n  handleClick = (e) => {\n    //console.log(\"click \", e);\n    this.setState({\n      current: e.key,\n    });\n  };\n  render() {\n    return (\n      <Menu\n        theme=\"dark\"\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"horizontal\"\n      >\n        <Menu.Item key=\"about\">\n          <RobotOutlined />\n          <Link to=\"/About\">關於我</Link>\n        </Menu.Item>\n        <SubMenu\n          title={\n            <span className=\"submenu-title-wrapper\">\n              <AppstoreOutlined />\n              小工具\n            </span>\n          }\n        >\n          <Menu.Item key=\"setting:1\">\n            {\" \"}\n            <Link to=\"/\">酒精換算小工具</Link>\n          </Menu.Item>\n        </SubMenu>\n      </Menu>\n    );\n  }\n}\nexport default ComHeader;\n","import React from \"react\";\n\nconst ComFooter = () => {\n  return <>留空事務所 stillshot © 2020. Powered by 留空事務所 stillshot!</>;\n};\nexport default ComFooter;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport ComHeader from \"@components/ComHeader\";\nimport ComFooter from \"@components/ComFooter\";\nconst { Header, Content, Footer } = Layout;\n\nconst LayoutNoSide = (props) => {\n  return (\n    <Layout className={props.className}>\n      <Layout>\n        <Header className=\"header\">\n          <ComHeader />\n        </Header>\n        <Content className=\"content\">\n          {props.breadcrumb}\n          {props.title}\n          <div className=\"content__item\">{props.children}</div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          <ComFooter />\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\nexport default LayoutNoSide;\n","import React from \"react\";\nimport LayoutNoSide from \"@layouts/LayoutNoSide\";\nimport { Switch } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\n// import { Breadcrumb } from \"@components/Breadcrumb\";\nimport \"@styles/Base.sass\";\nimport \"@styles/PageMethod.sass\";\n/* 自定義麵包屑初始位置\nconst onMatchedRoutes = (matchedRoutes) => {\n  return [\n    {\n      route: {\n        path: '/',\n        breadcrumbName: 'mcs'\n      }\n    },\n    ...matchedRoutes,\n  ];\n};\n*/\nconst breadcrumb = (\n  /**如果需要麵包屑，要從這傳 */\n  /*\n  <Breadcrumb\n    locationPath={props.location.pathname}\n    onMatchedRoutes={onMatchedRoutes}\n  />\n  */\n  <></>\n);\nclass Home extends React.Component {\n  state = {\n    pageMethod: 1,\n  };\n  render() {\n    if (this.state.pageMethod === 1) {\n      return (\n        <LayoutNoSide className=\"appPage\" breadcrumb={breadcrumb}>\n          <Switch>{renderRoutes(this.props.route.routes)}</Switch>\n        </LayoutNoSide>\n      );\n    }\n  }\n}\nexport default Home;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AlcCompute from \"@components/tools/AlcCompute\";\nimport About from \"@components/ComAbout\";\nimport Home from \"@containers/Home\";\nconst routes = [\n  {\n    path: \"/\",\n    component: Home,\n    routes: [\n      {\n        path: \"/\",\n        exact: true,\n        render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\n      },\n      {\n        path: \"/about\",\n        component: About,\n        breadcrumbName: \"About\",\n      },\n      {\n        path: \"/mcs/tools/AlcCompute\",\n        component: AlcCompute,\n        breadcrumbName: \"AlcCompute\",\n      },\n      {\n        path: \"*\",\n        exact: true,\n        render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\n      },\n    ],\n  },\n  {\n    path: \"*\",\n    exact: true,\n    render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\nimport routes from \"@router\";\n\nconst Main = (props) => {\n  return (\n    <HashRouter>\n      <Switch>\n        <>{renderRoutes(routes)}</>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./main.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}