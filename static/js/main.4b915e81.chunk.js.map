{"version":3,"sources":["assets/images/portfolio/shino/painting1-bg.png","assets/images/portfolio/shino/painting1-full.png","assets/webAr/pattern-qr-code.patt","assets/webAr/potatoGltf.gltf","assets/images/portfolio/shino/painting2.jpg","assets/images/portfolio/shino/painting3.jpg","components/tools/AlcCompute.jsx","components/tools/DiscountCompute.jsx","components/ComHeader.jsx","components/ComFooter.jsx","layouts/LayoutBasic.jsx","components/ComAbout.jsx","services/DataAbout.js","containers/About.jsx","components/ComWebAr.jsx","containers/Teresa.jsx","containers/Home.jsx","layouts/portfolio/shino/LayoutBasic.jsx","containers/portfolio/Shino.jsx","constants/portfolio/shino/ConSummary.js","components/portfolio/shino/ComCarousel.jsx","router/index.js","components/portfolio/shino/ComSummary.jsx","main.js","serviceWorker.js","index.js"],"names":["module","exports","AlcCompute","state","AlcPercentHas","AlcPercentNeed","AlcMLNeed","onValuesChange","_","values","setState","result","WaterMLAdd","toFixed","AlcMLAdd","AlcDensity","style","color","span","size","name","initialValues","this","Item","label","min","max","dependencies","rules","getFieldValue","validator","rule","value","Promise","resolve","reject","data","React","Component","required","Option","DiscountCompute","goodsKind","goodsList","isCounting","discountMulti","disType","isChecked","ruleDis","goodsListforMap","goods","index","goodsElem","className","MinusCircleOutlined","onClick","goodsListRemove","goodsID","ruleType","onChange","goodsListUpdate","allowClear","goodsPrice","goodsNum","goodsSum","ruleNum","ruleDisRatio","key","goodsListAdd","newArr","newRid","newGoods","push","target","updateObj","updateValue","forEach","item","filter","goodsSumCount","ratio","goodsDiscountMulti","goodsListChild","map","type","width","PlusOutlined","e","checked","goodsTotalAmount","discountAmount","des","sum","obj","reduce","accumulator","currentValue","SubMenu","ComHeader","current","handleClick","theme","selectedKeys","mode","RobotOutlined","to","title","AppstoreOutlined","props","window","top","location","self","ComFooter","Header","Content","Footer","LayoutBasic","breadcrumb","children","textAlign","ComAbout","About","ComWebAr","loadScript","tag","document","createElement","async","src","txt","innerHTML","getElementsByTagName","appendChild","scriptObj","useEffect","embedded","arjs","url","require","position","text","gltf-model","Teresa","Home","renderRoutes","route","routes","Shino","Paintings","id","path","pathFull","pathBG","description","ComCarousel","afterChange","callback","effect","painting","i","alt","exact","render","component","breadcrumbName","currentIndex","console","log","backgroundImage","background","Main","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b915e81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/painting1-bg.1858d079.png\";","module.exports = __webpack_public_path__ + \"static/media/painting1-full.dc8cbe15.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern-qr-code.d9551d6d.patt\";","module.exports = __webpack_public_path__ + \"static/media/potatoGltf.666718a9.gltf\";","module.exports = __webpack_public_path__ + \"static/media/painting2.bef88bb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/painting3.451ed718.jpg\";","import React from \"react\";\r\nimport { Form, InputNumber, Row, Col } from \"antd\";\r\n\r\nclass AlcCompute extends React.Component {\r\n  state = {\r\n    AlcPercentHas: 96,\r\n    AlcPercentNeed: 75,\r\n    AlcMLNeed: 500,\r\n  };\r\n  get AlcDensity() {\r\n    return (\r\n      (this.state.AlcPercentHas * 0.8 + (100 - this.state.AlcPercentHas * 1)) /\r\n      100\r\n    );\r\n  }\r\n  get AlcCompute() {\r\n    let data = {\r\n      AlcMLAdd: 0,\r\n      WaterMLAdd: 0,\r\n    };\r\n    data.AlcMLAdd =\r\n      (this.state.AlcPercentNeed * this.state.AlcMLNeed) /\r\n      this.state.AlcPercentHas;\r\n    data.WaterMLAdd = this.state.AlcMLNeed - data.AlcMLAdd;\r\n    return data;\r\n  }\r\n  onValuesChange = (_, values) => {\r\n    this.setState({\r\n      AlcPercentHas: values.AlcPercentHas,\r\n      AlcPercentNeed: values.AlcPercentNeed,\r\n      AlcMLNeed: values.AlcMLNeed,\r\n    });\r\n  };\r\n  result = () => {\r\n    if (this.state.AlcPercentHas > this.state.AlcPercentNeed) {\r\n      return (\r\n        <pre>\r\n          {`添加水(ml): ${this.AlcCompute.WaterMLAdd.toFixed(2)}\r\n添加酒精(ml): ${this.AlcCompute.AlcMLAdd.toFixed(2)}\r\n\r\n或\r\n\r\n添加水(g): ${this.AlcCompute.WaterMLAdd.toFixed(2)}\r\n添加酒精(g): ${(this.AlcCompute.AlcMLAdd * this.AlcDensity).toFixed(2)}`}\r\n        </pre>\r\n      );\r\n    } else {\r\n      return (\r\n        <pre style={{ color: \"#ff4d4f\" }}>\r\n          {`添加的酒精濃度要大於想得到的酒精濃度！`}\r\n        </pre>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <h1>酒精換算器</h1>\r\n          <Form\r\n            size=\"large\"\r\n            name=\"basic\"\r\n            /* eslint-disable */\r\n            initialValues={{\r\n              [\"AlcPercentHas\"]: this.state.AlcPercentHas,\r\n              [\"AlcPercentNeed\"]: this.state.AlcPercentNeed,\r\n              [\"AlcMLNeed\"]: this.state.AlcMLNeed,\r\n            }}\r\n            /* eslint-enable */\r\n            onValuesChange={this.onValuesChange}\r\n          >\r\n            <Form.Item name=\"AlcPercentHas\" label=\"添加酒精濃度(%)\">\r\n              <InputNumber min={1} max={100} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"AlcPercentNeed\"\r\n              label=\"欲得酒精濃度(%)\"\r\n              dependencies={[\"AlcPercentHas\"]}\r\n              rules={[\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"AlcPercentHas\") > value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      \"添加的酒精濃度要大於想得到的酒精濃度！\"\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <InputNumber min={1} max={100} />\r\n            </Form.Item>\r\n            <Form.Item name=\"AlcMLNeed\" label=\"欲得酒精容量(ml)\">\r\n              <InputNumber min={1} />\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n        <Col span={24}>\r\n          <hr />\r\n          <h1>計算結果</h1>\r\n          {this.result()}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default AlcCompute;\r\n","import React from \"react\";\r\nimport \"@styles/Tools.sass\";\r\nimport { Form, Checkbox, InputNumber, Select, Button, Row, Col } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nconst rules = [{ required: true }];\r\nconst { Option } = Select;\r\nclass DiscountCompute extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    goodsKind: 0,\r\n    goodsList: [],\r\n    isCounting: false,\r\n    discountMulti: [\r\n      {\r\n        disType: \"type1\",\r\n        isChecked: false,\r\n        rule: 1,\r\n        ruleDis: 1,\r\n      },\r\n      {\r\n        disType: \"type2\",\r\n        isChecked: false,\r\n        rule: 1,\r\n        ruleDis: 1,\r\n      },\r\n      {\r\n        disType: \"type3\",\r\n        isChecked: false,\r\n        rule: 1,\r\n        ruleDis: 1,\r\n      },\r\n    ],\r\n  };\r\n  get discountAmount() {\r\n    if (this.goodsTotalAmount) {\r\n      let obj = { sum: this.goodsTotalAmount, des: [] };\r\n      let ratio = 1;\r\n      this.state.discountMulti.forEach((item, index) => {\r\n        if (item.isChecked && this.goodsTotalAmount >= item.rule) {\r\n          obj.des = `${obj.des}符合活動${index + 1}. `;\r\n          item.ruleDis < 10\r\n            ? (ratio = item.ruleDis / 10)\r\n            : (ratio = item.ruleDis / 100);\r\n          switch (item.disType) {\r\n            case \"type1\":\r\n              obj.sum = obj.sum * ratio >= 1 ? obj.sum * ratio : 1;\r\n              break;\r\n            case \"type2\":\r\n              obj.sum = obj.sum * ratio >= 1 ? obj.sum * ratio : 1;\r\n              break;\r\n            case \"type3\":\r\n              obj.sum =\r\n                obj.sum - item.ruleDis >= 0 ? obj.sum - item.ruleDis : 0;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      });\r\n      return obj;\r\n    }\r\n    return false;\r\n  }\r\n  get goodsTotalAmount() {\r\n    if (this.state.isCounting) {\r\n      const reducePlus = this.state.goodsList.reduce(\r\n        (accumulator, currentValue) => {\r\n          return accumulator + currentValue.goodsSum;\r\n        },\r\n        0\r\n      );\r\n      return reducePlus;\r\n    } else return false;\r\n  }\r\n  goodsListforMap = (goods, index) => {\r\n    const goodsElem = (\r\n      <>\r\n        <Form.Item>\r\n          <Form.Item className=\"goodsGroup__desTxt\">\r\n            <MinusCircleOutlined\r\n              className=\"dynamic-delete-button\"\r\n              onClick={() => {\r\n                this.goodsListRemove(goods.goodsID);\r\n              }}\r\n            />\r\n            &nbsp; 商品{index + 1}：\r\n          </Form.Item>\r\n          <Form.Item rules={rules} className=\"goodsGroup__select\">\r\n            <Select\r\n              value={goods.ruleType}\r\n              onChange={(value) =>\r\n                this.goodsListUpdate(goods.goodsID, \"ruleType\", value)\r\n              }\r\n              allowClear\r\n            >\r\n              <Option value=\"None\">無優惠</Option>\r\n              <Option value=\"Type1\">買幾件就打幾折</Option>\r\n              <Option value=\"Type2\">第幾件打幾折</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Col span={24}>\r\n            {goods.ruleType === \"None\" && (\r\n              <>\r\n                <Col span={24}>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">原價：</Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsPrice}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsPrice\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;元，已購買：\r\n                  </Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsNum}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsNum\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;件。\r\n                  </Form.Item>\r\n                </Col>\r\n                {!!this.state.isCounting && (\r\n                  <Col span={24}>\r\n                    <Form.Item className=\"goodsGroup__desTxt\">\r\n                      <span>沒有任何優惠活動，總價 {goods.goodsSum} 元。</span>\r\n                    </Form.Item>\r\n                  </Col>\r\n                )}\r\n              </>\r\n            )}\r\n            {goods.ruleType === \"Type1\" && (\r\n              <>\r\n                <Col span={24}>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">原價：</Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsPrice}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsPrice\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;元，已購買：\r\n                  </Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsNum}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsNum\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;件。\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">買&nbsp;</Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.ruleNum}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"ruleNum\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;件，打&nbsp;\r\n                  </Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.ruleDisRatio}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(\r\n                          goods.goodsID,\r\n                          \"ruleDisRatio\",\r\n                          value\r\n                        )\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;折。\r\n                  </Form.Item>\r\n                </Col>\r\n                {!!this.state.isCounting && (\r\n                  <Col span={24}>\r\n                    <Form.Item className=\"goodsGroup__desTxt\">\r\n                      {goods.goodsNum >= goods.ruleNum ? (\r\n                        <span>符合優惠活動，總價 {goods.goodsSum} 元。</span>\r\n                      ) : (\r\n                        <span style={{ color: \"red\" }}>\r\n                          不符合優惠活動，總價 {goods.goodsSum} 元。\r\n                        </span>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                )}\r\n              </>\r\n            )}\r\n            {goods.ruleType === \"Type2\" && (\r\n              <>\r\n                <Col span={24}>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">原價：</Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsPrice}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsPrice\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;元，已購買：\r\n                  </Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.goodsNum}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"goodsNum\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;件。\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">第&nbsp;</Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.ruleNum}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(goods.goodsID, \"ruleNum\", value)\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;件，打&nbsp;\r\n                  </Form.Item>\r\n                  <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                    <InputNumber\r\n                      min={0}\r\n                      value={goods.ruleDisRatio}\r\n                      onChange={(value) =>\r\n                        this.goodsListUpdate(\r\n                          goods.goodsID,\r\n                          \"ruleDisRatio\",\r\n                          value\r\n                        )\r\n                      }\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item className=\"goodsGroup__desTxt\">\r\n                    &nbsp;折。\r\n                  </Form.Item>\r\n                </Col>\r\n                {!!this.state.isCounting && (\r\n                  <Col span={24}>\r\n                    <Form.Item className=\"goodsGroup__desTxt\">\r\n                      {goods.goodsNum >= goods.ruleNum ? (\r\n                        <span>符合優惠活動，總價 {goods.goodsSum} 元。</span>\r\n                      ) : (\r\n                        <span style={{ color: \"red\" }}>\r\n                          不符合優惠活動，總價 {goods.goodsSum} 元。\r\n                        </span>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n        </Form.Item>\r\n      </>\r\n    );\r\n    return (\r\n      <Col key={goods.goodsID} span={24} className=\"goodsGroup\">\r\n        {goodsElem}\r\n      </Col>\r\n    );\r\n  };\r\n  goodsListAdd = () => {\r\n    let newArr = this.state.goodsList;\r\n    let newRid = this.state.goodsKind + 1;\r\n    const newGoods = {\r\n      goodsID: `goods${newRid}`,\r\n      goodsNum: 0,\r\n      goodsPrice: 0,\r\n      goodsSum: 0,\r\n      ruleType: \"None\",\r\n      ruleNum: 0,\r\n      ruleDisRatio: 0,\r\n    };\r\n    newArr.push(newGoods);\r\n    this.setState({ goodsList: newArr, goodsKind: newRid });\r\n  };\r\n  goodsListUpdate = (target, updateObj, updateValue) => {\r\n    let newArr = this.state.goodsList;\r\n    newArr.forEach((item) => {\r\n      if (item.goodsID === target) item[updateObj] = updateValue;\r\n    });\r\n    this.setState({ goodsList: newArr, isCounting: false });\r\n  };\r\n  goodsListRemove = (target) => {\r\n    let newArr = this.state.goodsList;\r\n    newArr = newArr.filter((item) => {\r\n      return item.goodsID !== target;\r\n    });\r\n    this.setState({ goodsList: newArr, isCounting: false });\r\n  };\r\n  goodsSumCount = () => {\r\n    let newArr = this.state.goodsList;\r\n    let ratio = 0;\r\n    newArr.forEach((item) => {\r\n      item.ruleDisRatio < 10\r\n        ? (ratio = item.ruleDisRatio / 10)\r\n        : (ratio = item.ruleDisRatio / 100);\r\n      switch (item.ruleType) {\r\n        case \"Type1\":\r\n          item.goodsNum >= item.ruleNum\r\n            ? (item.goodsSum = item.goodsPrice * item.goodsNum * ratio)\r\n            : (item.goodsSum = item.goodsPrice * item.goodsNum);\r\n          break;\r\n        case \"Type2\":\r\n          item.goodsNum >= item.ruleNum\r\n            ? (item.goodsSum =\r\n                item.goodsPrice * (item.goodsNum - 1) + item.goodsPrice * ratio)\r\n            : (item.goodsSum = item.goodsPrice * item.goodsNum);\r\n          break;\r\n        default:\r\n          item.goodsSum = item.goodsPrice * item.goodsNum;\r\n          break;\r\n      }\r\n    });\r\n    this.setState({ goodsList: newArr, isCounting: true });\r\n  };\r\n  goodsDiscountMulti = (target, updateObj, updateValue) => {\r\n    let newArr = this.state.discountMulti;\r\n    newArr.forEach((item) => {\r\n      if (item.disType === target) item[updateObj] = updateValue;\r\n    });\r\n    this.setState({ discountMulti: newArr, isCounting: false });\r\n  };\r\n  render() {\r\n    const goodsListChild = this.state.goodsList.map(this.goodsListforMap);\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <h1>折價金額換算器</h1>\r\n          <Form className=\"my-form\">\r\n            <Form.Item>\r\n              <Form.Item>\r\n                <h4>商品清單：</h4>\r\n              </Form.Item>\r\n              {goodsListChild}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={this.goodsListAdd}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <PlusOutlined /> 輸入商品\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item>\r\n                <h4>複選活動(依序計算)：</h4>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    onChange={(e) =>\r\n                      this.goodsDiscountMulti(\r\n                        \"type1\",\r\n                        \"isChecked\",\r\n                        e.target.checked\r\n                      )\r\n                    }\r\n                  >\r\n                    刷卡優惠，活動一\r\n                  </Checkbox>\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">\r\n                  刷卡打&nbsp;\r\n                </Form.Item>\r\n                <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                  <InputNumber\r\n                    min={1}\r\n                    value={this.state.discountMulti[0].ruleDis}\r\n                    onChange={(value) =>\r\n                      this.goodsDiscountMulti(\"type1\", \"ruleDis\", value)\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">&nbsp;折。</Form.Item>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    onChange={(e) =>\r\n                      this.goodsDiscountMulti(\r\n                        \"type2\",\r\n                        \"isChecked\",\r\n                        e.target.checked\r\n                      )\r\n                    }\r\n                  >\r\n                    滿額優惠，活動二\r\n                  </Checkbox>\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">滿&nbsp;</Form.Item>\r\n                <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                  <InputNumber\r\n                    min={1}\r\n                    value={this.state.discountMulti[1].rule}\r\n                    onChange={(value) =>\r\n                      this.goodsDiscountMulti(\"type2\", \"rule\", value)\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">\r\n                  &nbsp;元，打\r\n                </Form.Item>\r\n                <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                  <InputNumber\r\n                    min={1}\r\n                    value={this.state.discountMulti[1].ruleDis}\r\n                    onChange={(value) =>\r\n                      this.goodsDiscountMulti(\"type2\", \"ruleDis\", value)\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">&nbsp;折。</Form.Item>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Form.Item>\r\n                  <Checkbox\r\n                    onChange={(e) =>\r\n                      this.goodsDiscountMulti(\r\n                        \"type3\",\r\n                        \"isChecked\",\r\n                        e.target.checked\r\n                      )\r\n                    }\r\n                  >\r\n                    滿額優惠，活動三。\r\n                  </Checkbox>\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">滿&nbsp;</Form.Item>\r\n                <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                  <InputNumber\r\n                    min={1}\r\n                    value={this.state.discountMulti[2].rule}\r\n                    onChange={(value) =>\r\n                      this.goodsDiscountMulti(\"type3\", \"rule\", value)\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">\r\n                  &nbsp;元，折\r\n                </Form.Item>\r\n                <Form.Item rules={rules} className=\"goodsGroup__item\">\r\n                  <InputNumber\r\n                    min={1}\r\n                    value={this.state.discountMulti[2].ruleDis}\r\n                    onChange={(value) =>\r\n                      this.goodsDiscountMulti(\"type3\", \"ruleDis\", value)\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item className=\"goodsGroup__desTxt\">&nbsp;元。</Form.Item>\r\n              </Form.Item>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" onClick={() => this.goodsSumCount()}>\r\n                計算\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n        {this.state.isCounting && (\r\n          <Col span={24}>\r\n            <hr />\r\n            <h1>計算結果</h1>\r\n            {this.goodsTotalAmount} <br />\r\n            {!!this.discountAmount.des && (\r\n              <>\r\n                活動後：\r\n                {this.discountAmount.des} <br />\r\n                {this.discountAmount.sum.toFixed(0)}\r\n              </>\r\n            )}\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default DiscountCompute;\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { RobotOutlined, AppstoreOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass ComHeader extends React.Component {\r\n  state = {\r\n    current: \"\",\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (window.top.location !== window.self.location)\r\n      window.top.location = window.self.location;\r\n    return null;\r\n  }\r\n  handleClick = (e) => {\r\n    //console.log(\"click \", e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu\r\n        theme=\"dark\"\r\n        onClick={this.handleClick}\r\n        selectedKeys={[this.state.current]}\r\n        mode=\"horizontal\"\r\n      >\r\n        <Menu.Item key=\"about\">\r\n          <RobotOutlined />\r\n          <Link to=\"/About\">關於我</Link>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <AppstoreOutlined />\r\n              小工具\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"setting:1\">\r\n            <Link to=\"/\">酒精換算</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"setting:2\">\r\n            <Link to=\"/mcs/tools/DiscountCompute\">折價金額換算器</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default ComHeader;\r\n","import React from \"react\";\r\n\r\nconst ComFooter = () => {\r\n  return <>留空事務所 stillshot © 2020. Powered by 留空事務所 stillshot!</>;\r\n};\r\nexport default ComFooter;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport ComHeader from \"@components/ComHeader\";\r\nimport ComFooter from \"@components/ComFooter\";\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst LayoutBasic = (props) => {\r\n  return (\r\n    <Layout className={props.className}>\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <ComHeader />\r\n        </Header>\r\n        <Content className=\"content\">\r\n          {props.breadcrumb}\r\n          {props.title}\r\n          <div className=\"content__item\">{props.children}</div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <ComFooter />\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\nexport default LayoutBasic;\r\n","import React from \"react\";\r\nimport { Data } from \"@services/DataAbout\";\r\n\r\nconst ComAbout = () => {\r\n  return <pre>{Data}</pre>;\r\n};\r\nexport default ComAbout;\r\n","export const Data = `- 留空事務所的工程師\r\n\r\n-- 其他夥伴休息中，目前由我獨自使用\r\n-- 會陸續寫一點小工具供大家免費使用\r\n\r\n-- 需要一點靈感。有需要的小工具可以來信(resavestation@gmail.com)，有可能會實現在這裡\r\n--- 我不會畫圖所以畫面不好看，您可以提供想要的樣式或畫面給我\r\n--- 製作後，會在此網站放置使用您素材的作品\r\n\r\n-- 若以後變為商用：\r\n1. 商用版本會移除您的素材\r\n2. 提供給您一份可執行檔，讓您依然有自己素材版本可使用\r\n3. 僅僅是可執行檔非sourcecode、同樣地您也不用給我素材原檔\r\n`;\r\n","import React from \"react\";\r\nimport LayoutBasic from \"@layouts/LayoutBasic\";\r\nimport ComAbout from \"@components/ComAbout\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <LayoutBasic className=\"appPage\">\r\n      <ComAbout />\r\n    </LayoutBasic>\r\n  );\r\n};\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst ComWebAr = () => {\r\n  const loadScript = (item) => {\r\n    let tag = document.createElement('script');\r\n    tag.async = false;\r\n    !!item.src && (tag.src = item.src);\r\n    !!item.txt && (tag.innerHTML = item.txt);\r\n    document.getElementsByTagName('head')[0].appendChild(tag);\r\n  };\r\n  const scriptObj = [{\r\n    src: \"https://cdn.jsdelivr.net/gh/aframevr/aframe@1c2407b26c61958baa93967b5412487cd94b290b/dist/aframe-master.min.js\",\r\n    txt: \"\"\r\n  },{\r\n    src: \"https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js\",\r\n    txt: \"\"\r\n  }];\r\n  const initWebAr = () => {\r\n    scriptObj.map(loadScript);\r\n  };\r\n  useEffect(initWebAr, []);\r\n  return (\r\n    <a-scene embedded arjs='sourceType: webcam; debugUIEnabled: false;'>\r\n        <a-marker type='pattern' url={require(\"../assets/webAr/pattern-qr-code.patt\")}>\r\n            <a-entity position='-3 2 0' text=\"width: 5; value:預祝阿姨，聖誕快樂\"></a-entity>\r\n            <a-entity position='0 0 0' gltf-model={require(\"../assets/webAr/potatoGltf.gltf\")}></a-entity>\r\n        </a-marker>\r\n    </a-scene>\r\n  );\r\n};\r\nexport default ComWebAr;\r\n","import React from \"react\";\r\nimport ComWebAr from \"@components/ComWebAr\";\r\n\r\nconst Teresa = () => {\r\n  return (\r\n    <ComWebAr />\r\n  );\r\n};\r\nexport default Teresa;\r\n","import React from \"react\";\r\nimport LayoutBasic from \"@layouts/LayoutBasic\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\n// import { renderRoutes, matchRoutes } from \"react-router-config\";\r\n// import { Breadcrumb } from \"@components/Breadcrumb\";\r\n\r\n/* 自定義麵包屑初始位置\r\nconst onMatchedRoutes = (matchedRoutes) => {\r\n  return [\r\n    {\r\n      route: {\r\n        path: '/',\r\n        breadcrumbName: 'mcs'\r\n      }\r\n    },\r\n    ...matchedRoutes,\r\n  ];\r\n};\r\n*/\r\nconst breadcrumb = (\r\n  /**如果需要麵包屑，要從這傳 */\r\n  /*\r\n  <Breadcrumb\r\n    locationPath={props.location.pathname}\r\n    onMatchedRoutes={onMatchedRoutes}\r\n  />\r\n  */\r\n  <></>\r\n);\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <LayoutBasic className=\"appPage\" breadcrumb={breadcrumb}>\r\n      <Switch>{renderRoutes(props.route.routes)}</Switch>\r\n    </LayoutBasic>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nconst { Content } = Layout;\r\n\r\nconst LayoutBasic = (props) => {\r\n  return (\r\n    <Layout className={props.className}>\r\n      <Layout>\r\n        <Content className=\"content\">\r\n          {props.title}\r\n          <div className=\"content__item\">{props.children}</div>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\nexport default LayoutBasic;\r\n","import React from \"react\";\r\nimport LayoutBasic from \"@layouts/portfolio/shino/LayoutBasic\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport \"@styles/portfolio/Shino.sass\";\r\n\r\nconst Shino = (props) => {\r\n  return (\r\n    <LayoutBasic className=\"appPage shino\">\r\n      <Switch>{renderRoutes(props.route.routes)}</Switch>\r\n    </LayoutBasic>\r\n  );\r\n};\r\nexport default Shino;\r\n","export const Paintings = [\r\n  {\r\n    id: \"千\",\r\n    path: require(\"@images/portfolio/shino/painting1-full.png\"),\r\n    pathFull: require(\"@images/portfolio/shino/painting1-full.png\"),\r\n    pathBG: require(\"@images/portfolio/shino/painting1-bg.png\"),\r\n    description: `千的說明`,\r\n  },\r\n  {\r\n    id: \"明日香\",\r\n    path: require(\"@images/portfolio/shino/painting2.jpg\"),\r\n    pathBG: require(\"@images/portfolio/shino/painting1-bg.png\"),\r\n    description: `明日香的說明`,\r\n  },\r\n  {\r\n    id: \"小螞蟻\",\r\n    path: require(\"@images/portfolio/shino/painting3.jpg\"),\r\n    pathBG: require(\"@images/portfolio/shino/painting1-bg.png\"),\r\n    description: `小螞蟻的說明`,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\nimport { Paintings } from \"@constants/portfolio/shino/ConSummary\";\r\nconst ComCarousel = (props) => {\r\n  return (\r\n    <Carousel afterChange={props.callback} effect=\"fade\">\r\n      {Paintings.map((painting, i) => {\r\n        const { id, path } = painting;\r\n        return (\r\n          <div className=\"carousel__item\">\r\n            <img id={id} key={i} alt={`painting: ${id}`} src={path} />\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\nexport default ComCarousel;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AlcCompute from \"@components/tools/AlcCompute\";\r\nimport DiscountCompute from \"@components/tools/DiscountCompute\";\r\nimport About from \"@containers/About\";\r\nimport Teresa from \"@containers/Teresa\";\r\nimport Home from \"@containers/Home\";\r\n\r\n/*shino作品集start*/\r\nimport Shino from \"@containers/portfolio/Shino\";\r\nimport ComSummary from \"@components/portfolio/shino/ComSummary\";\r\n/*shino作品集end */\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\r\n  },\r\n  {\r\n    path: \"/Teresa\",\r\n    component: Teresa,\r\n    breadcrumbName: \"Teresa\",\r\n  },\r\n  {\r\n    path: \"/about\",\r\n    component: About,\r\n    breadcrumbName: \"About\",\r\n  },\r\n  {\r\n    path: \"/mcs/tools\",\r\n    component: Home,\r\n    routes: [\r\n      {\r\n        path: \"/mcs/tools\",\r\n        exact: true,\r\n        render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\r\n      },\r\n      {\r\n        path: \"/mcs/tools/AlcCompute\",\r\n        component: AlcCompute,\r\n        breadcrumbName: \"AlcCompute\",\r\n      },\r\n      {\r\n        path: \"/mcs/tools/DiscountCompute\",\r\n        component: DiscountCompute,\r\n        breadcrumbName: \"DiscountCompute\",\r\n      },\r\n      {\r\n        path: \"*\",\r\n        exact: true,\r\n        render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/portfolio\",\r\n    component: Shino,\r\n    routes: [\r\n      {\r\n        path: \"/portfolio\",\r\n        exact: true,\r\n        render: () => <Redirect to={\"/portfolio/shino\"} />,\r\n      },\r\n      {\r\n        path: \"/portfolio/shino\",\r\n        component: ComSummary,\r\n        breadcrumbName: \"ComSummary\",\r\n      },\r\n      {\r\n        path: \"*\",\r\n        exact: true,\r\n        render: () => <Redirect to={\"/portfolio/shino\"} />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"*\",\r\n    exact: true,\r\n    render: () => <Redirect to={\"/mcs/tools/AlcCompute\"} />,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\nimport ComCarousel from \"@components/portfolio/shino/ComCarousel\";\r\nimport { Paintings } from \"@constants/portfolio/shino/ConSummary\";\r\n\r\nclass ComSummary extends React.Component {\r\n  state = {\r\n    currentIndex: 0,\r\n  };\r\n  render() {\r\n    console.log(Paintings[this.state.currentIndex].pathBG);\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"summary__img\"\r\n          style={{\r\n            backgroundImage: `url(${\r\n              Paintings[this.state.currentIndex].pathBG\r\n            })`,\r\n          }}\r\n        >\r\n          <ComCarousel\r\n            callback={(currentIndex) =>\r\n              this.setState({ currentIndex: currentIndex })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"summary__img--full\">\r\n          <img\r\n            id={Paintings[this.state.currentIndex].id}\r\n            key={this.state.currentIndex}\r\n            alt={Paintings[this.state.currentIndex].description}\r\n            src={Paintings[this.state.currentIndex].path}\r\n          />\r\n        </div>\r\n        <div className=\"summary__des\" style={{ background: \"yellow\" }}>\r\n          {Paintings[this.state.currentIndex].description}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ComSummary;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport routes from \"@router\";\r\nimport \"@styles/Base.sass\";\r\nimport \"@styles/PageMethod.sass\";\r\nconst Main = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <>{renderRoutes(routes)}</>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./main.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}